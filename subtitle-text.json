[
  {
    "text": "Welcome to SQL Queries."
  },
  {
    "text": "In this lesson,\nwe're going to focus on SQL statements."
  },
  {
    "text": "We'll talk\na little bit about advanced queries,"
  },
  {
    "text": "and then we'll look at how the SQL\nTool can help us write advanced queries."
  },
  {
    "text": "Then we'll talk about\nhow you can test the queries you create,"
  },
  {
    "text": "and how\nyou can actually do Non-Select queries,"
  },
  {
    "text": "such as UPDATE."
  },
  {
    "text": "Retrieving data\nfrom the database can be fairly complex,"
  },
  {
    "text": "because we\nmay need multiple sources of data that"
  },
  {
    "text": "we can manipulate in different ways."
  },
  {
    "text": "By now\nyou should be familiar with Aggregates."
  },
  {
    "text": "Although\nAggregates provide an easy visual"
  },
  {
    "text": "way to fetch data from the database,\nsometimes"
  },
  {
    "text": "you need more complex queries with\nwhich Aggregates aren't able to cope."
  },
  {
    "text": "Besides\nusing Aggregates to query entities, it"
  },
  {
    "text": "is also possible to write SQL statements\nthat are fairly complex (for instance,"
  },
  {
    "text": "containing sub-queries),\nusing the SQL Tool."
  },
  {
    "text": "The SQL\ntool is available in server-side flows,"
  },
  {
    "text": "such as\nServer Actions and Screen Data Actions."
  },
  {
    "text": "The inputs and outputs\nhave to be defined ahead of time,"
  },
  {
    "text": "which you can\ndo using the visual editor at the top."
  },
  {
    "text": "Inside the SQL Tool is where\nyou'll be able to write SQL statements."
  },
  {
    "text": "You will write the SQL itself manually,\nin the tab at the bottom."
  },
  {
    "text": "As you're writing it, the SQL tool\nwill do syntax checking and tell you if"
  },
  {
    "text": "the SQL you're writing has any errors."
  },
  {
    "text": "It will also\nhighlight all of the different keywords,"
  },
  {
    "text": "any of the\ndifferent attributes or the entities,"
  },
  {
    "text": "and the input parameters."
  },
  {
    "text": "It is important to know\nthat the SQL Tool is like a black box."
  },
  {
    "text": "This means that it doesn't\nhave direct access to the outside scope."
  },
  {
    "text": "So to have access\nto data coming from the outer scope,"
  },
  {
    "text": "we need to define the\ninput parameters and their data types."
  },
  {
    "text": "The input parameters can\nthen be used in the SQL Query directly,"
  },
  {
    "text": "using the @ notation."
  },
  {
    "text": "Since you are manually writing the SQL,\nyou have"
  },
  {
    "text": "to know which database you're targeting,\nbecause each database implements"
  },
  {
    "text": "a slightly different SQL dialect."
  },
  {
    "text": "If you're using SQL Server and you want\nto limit the number of rows retrieved,"
  },
  {
    "text": "you would use TOP, instead of\npotentially using something like LIMIT,"
  },
  {
    "text": "as in other databases."
  },
  {
    "text": "When we're\nactually working with the Entities and"
  },
  {
    "text": "the Attributes inside of the SQL tool,\nwe have to kind of abstract the names"
  },
  {
    "text": "for the Entities and the Attributes."
  },
  {
    "text": "Entities' names need to be surrounded by\ncurly brackets; Attributes' names need"
  },
  {
    "text": "to be surrounded by square brackets."
  },
  {
    "text": "That's because when\nwe create an Entity and its Attributes,"
  },
  {
    "text": "those become tables and columns."
  },
  {
    "text": "The tables and columns don't necessarily\nhave the exact name of the Entity and"
  },
  {
    "text": "Attributes defined in Service Studio."
  },
  {
    "text": "OutSystems takes care of\ncreating that for you under the covers."
  },
  {
    "text": "So the special syntax\nwith the curly and square brackets is"
  },
  {
    "text": "automatically translated by OutSystems\nto the physical names in the database."
  },
  {
    "text": "Before\nwe move on to the SQL Tool outputs,"
  },
  {
    "text": "let's talk about Structures."
  },
  {
    "text": "Structures\nare somewhat similar to entities,"
  },
  {
    "text": "in the\nsense that they are compound data types."
  },
  {
    "text": "However, they are simply a data type\ndefinition; they don't hold any value."
  },
  {
    "text": "Another important feature\nis that a structure is not a variable,"
  },
  {
    "text": "but a variable can\nhave its data type set to a structure."
  },
  {
    "text": "Since\na structure is a compound data type,"
  },
  {
    "text": "it is composed of multiple Attributes."
  },
  {
    "text": "Each Attribute has a data type,\nsuch as integer, text, entity,"
  },
  {
    "text": "or even another structure."
  },
  {
    "text": "Let's\ngo back to the SQL Tool and its outputs."
  },
  {
    "text": "Besides defining\nthe input parameters and the SQL query,"
  },
  {
    "text": "it is also required to\nset the Output Entities and Structures."
  },
  {
    "text": "It is mandatory to set\nat least one Output Structure or Entity."
  },
  {
    "text": "These Output Entities and\nStructures must map to the query output,"
  },
  {
    "text": "that is, the SELECT part.\nIf we are doing a query with"
  },
  {
    "text": "a set of columns is in a select clause,\nthen the output"
  },
  {
    "text": "has to have the same number of columns,\nand the data types must also match."
  },
  {
    "text": "Then the output from the SQL Tool\nis going to be just like in Aggregates."
  },
  {
    "text": "The\noutput will contain a List and a Count."
  },
  {
    "text": "The List\nitself will have the usual Attributes,"
  },
  {
    "text": "and the\nCurrent will have the output Entities"
  },
  {
    "text": "and Structures defined in the SQL Tool."
  },
  {
    "text": "Like in Aggregates, the SQL\ntool also allows you to test queries."
  },
  {
    "text": "Inside of the Test Inputs tab,\nwe can define"
  },
  {
    "text": "the values for the input parameters,\nin case we have any."
  },
  {
    "text": "These values will be used\nto execute the query during the test."
  },
  {
    "text": "Clicking on the Test button will\nactually take us to the test output tab."
  },
  {
    "text": "In the Test Output tab you'll\nbe able to see the results of the query."
  },
  {
    "text": "Testing the SQL query is important\nto make sure that it works as expected."
  },
  {
    "text": "Last, but also quite important,\nis that we can use the"
  },
  {
    "text": "SQL tool to do non-select statements."
  },
  {
    "text": "When we do selects, we're really just\nmaking a query from a set of tables."
  },
  {
    "text": "But the SQL tool\nallows us to do non-select statements,"
  },
  {
    "text": "which\nincludes things like inserting records,"
  },
  {
    "text": "updating records,\nand deleting certain records."
  },
  {
    "text": "Each\nentity already provides some of these"
  },
  {
    "text": "capabilities via the Entity Actions."
  },
  {
    "text": "However, for more complex use cases,\nusing a DELETE"
  },
  {
    "text": "statement to delete records in bulk may\nactually be easier and more performant."
  },
  {
    "text": "SQL statements that are deletes,\ninserts, and updates,"
  },
  {
    "text": "are written normally as well, with\nthe special curly and square brackets"
  },
  {
    "text": "syntax around Entities and Attributes."
  },
  {
    "text": "These\nSQL statements don't have a real output,"
  },
  {
    "text": "but we still have\nto define an output entity or structure."
  },
  {
    "text": "Here, a dummy one will do,\nor preferably you can use"
  },
  {
    "text": "the entities upon which you are acting."
  }
]
