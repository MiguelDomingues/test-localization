[
  "Welcome to SQL Queries.",
  "In this lesson,\nwe're going to focus on SQL statements.",
  "We'll talk\na little bit about advanced queries,",
  "and then we'll look at how the SQL\nTool can help us write advanced queries.",
  "Then we'll talk about\nhow you can test the queries you create,",
  "and how\nyou can actually do Non-Select queries,",
  "such as UPDATE.",
  "Retrieving data\nfrom the database can be fairly complex,",
  "because we\nmay need multiple sources of data that",
  "we can manipulate in different ways.",
  "By now\nyou should be familiar with Aggregates.",
  "Although\nAggregates provide an easy visual",
  "way to fetch data from the database,\nsometimes",
  "you need more complex queries with\nwhich Aggregates aren't able to cope.",
  "Besides\nusing Aggregates to query entities, it",
  "is also possible to write SQL statements\nthat are fairly complex (for instance,",
  "containing sub-queries),\nusing the SQL Tool.",
  "The SQL\ntool is available in server-side flows,",
  "such as\nServer Actions and Screen Data Actions.",
  "The inputs and outputs\nhave to be defined ahead of time,",
  "which you can\ndo using the visual editor at the top.",
  "Inside the SQL Tool is where\nyou'll be able to write SQL statements.",
  "You will write the SQL itself manually,\nin the tab at the bottom.",
  "As you're writing it, the SQL tool\nwill do syntax checking and tell you if",
  "the SQL you're writing has any errors.",
  "It will also\nhighlight all of the different keywords,",
  "any of the\ndifferent attributes or the entities,",
  "and the input parameters.",
  "It is important to know\nthat the SQL Tool is like a black box.",
  "This means that it doesn't\nhave direct access to the outside scope.",
  "So to have access\nto data coming from the outer scope,",
  "we need to define the\ninput parameters and their data types.",
  "The input parameters can\nthen be used in the SQL Query directly,",
  "using the @ notation.",
  "Since you are manually writing the SQL,\nyou have",
  "to know which database you're targeting,\nbecause each database implements",
  "a slightly different SQL dialect.",
  "If you're using SQL Server and you want\nto limit the number of rows retrieved,",
  "you would use TOP, instead of\npotentially using something like LIMIT,",
  "as in other databases.",
  "When we're\nactually working with the Entities and",
  "the Attributes inside of the SQL tool,\nwe have to kind of abstract the names",
  "for the Entities and the Attributes.",
  "Entities' names need to be surrounded by\ncurly brackets; Attributes' names need",
  "to be surrounded by square brackets.",
  "That's because when\nwe create an Entity and its Attributes,",
  "those become tables and columns.",
  "The tables and columns don't necessarily\nhave the exact name of the Entity and",
  "Attributes defined in Service Studio.",
  "OutSystems takes care of\ncreating that for you under the covers.",
  "So the special syntax\nwith the curly and square brackets is",
  "automatically translated by OutSystems\nto the physical names in the database.",
  "Before\nwe move on to the SQL Tool outputs,",
  "let's talk about Structures.",
  "Structures\nare somewhat similar to entities,",
  "in the\nsense that they are compound data types.",
  "However, they are simply a data type\ndefinition; they don't hold any value.",
  "Another important feature\nis that a structure is not a variable,",
  "but a variable can\nhave its data type set to a structure.",
  "Since\na structure is a compound data type,",
  "it is composed of multiple Attributes.",
  "Each Attribute has a data type,\nsuch as integer, text, entity,",
  "or even another structure.",
  "Let's\ngo back to the SQL Tool and its outputs.",
  "Besides defining\nthe input parameters and the SQL query,",
  "it is also required to\nset the Output Entities and Structures.",
  "It is mandatory to set\nat least one Output Structure or Entity.",
  "These Output Entities and\nStructures must map to the query output,",
  "that is, the SELECT part.\nIf we are doing a query with",
  "a set of columns is in a select clause,\nthen the output",
  "has to have the same number of columns,\nand the data types must also match.",
  "Then the output from the SQL Tool\nis going to be just like in Aggregates.",
  "The\noutput will contain a List and a Count.",
  "The List\nitself will have the usual Attributes,",
  "and the\nCurrent will have the output Entities",
  "and Structures defined in the SQL Tool.",
  "Like in Aggregates, the SQL\ntool also allows you to test queries.",
  "Inside of the Test Inputs tab,\nwe can define",
  "the values for the input parameters,\nin case we have any.",
  "These values will be used\nto execute the query during the test.",
  "Clicking on the Test button will\nactually take us to the test output tab.",
  "In the Test Output tab you'll\nbe able to see the results of the query.",
  "Testing the SQL query is important\nto make sure that it works as expected.",
  "Last, but also quite important,\nis that we can use the",
  "SQL tool to do non-select statements.",
  "When we do selects, we're really just\nmaking a query from a set of tables.",
  "But the SQL tool\nallows us to do non-select statements,",
  "which\nincludes things like inserting records,",
  "updating records,\nand deleting certain records.",
  "Each\nentity already provides some of these",
  "capabilities via the Entity Actions.",
  "However, for more complex use cases,\nusing a DELETE",
  "statement to delete records in bulk may\nactually be easier and more performant.",
  "SQL statements that are deletes,\ninserts, and updates,",
  "are written normally as well, with\nthe special curly and square brackets",
  "syntax around Entities and Attributes.",
  "These\nSQL statements don't have a real output,",
  "but we still have\nto define an output entity or structure.",
  "Here, a dummy one will do,\nor preferably you can use",
  "the entities upon which you are acting."
]
